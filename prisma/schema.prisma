// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Main {
  id          String   @id @default(cuid())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  name        String   @unique
  value       String?
  description String?
  //
  @@map("main")
}

model User {
  id           String   @id @default(cuid())
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  email        String   @unique
  passwordHash String
  //
  roles RolesOnUsers[]
  @@map("users")
}

model Role {
  id          String   @id @default(cuid())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  type        String
  description String?
  //
  users RolesOnUsers[]
  @@map("roles")
}
// https://www.prisma.io/docs/concepts/components/prisma-schema/relations/many-to-many-relations
model RolesOnUsers {
  id         String   @id @default(cuid())
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  user       User     @relation(fields: [userId], references: [id])
  userId     String
  role       Role     @relation(fields: [roleId], references: [id])
  roleId     String
  //
  @@unique([userId, roleId])
  @@map("ln_roles_users")
}

// model Session {
//   id        String   @id @default(cuid())
  
//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt
  
//   isValid     Boolean @default(true)
//   data        String
//   description String?
//   //
//   // userId String
//   // user User @relation(fields: [userId], references: [id])
//   @@map("sessions")
// }
